on:
  push:
    branches:
      - main
  workflow_dispatch:     

jobs:
  Build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: clone repository
        uses: actions/checkout@v3

      - name: authenticate to aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: eks-hello-world
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
          kubectl version --client
        
      - name: Display Deployment File Before Replacement
        run: cat deployment.yaml    

      - name: Replace Image in Deployment File
        run: python replace.py
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: eks-hello-world
          IMAGE_TAG: ${{ github.sha }}

      - name: Display Deployment File After Replacement
        run: cat deployment.yaml  

      - name: Deploy to EKS 
        run: |
          aws eks --region us-east-1 update-kubeconfig --name dev-cluster
          kubectl config current-context
          kubectl apply -f cluster.yaml
          kubectl apply -f deployment.yaml

